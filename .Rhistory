}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(2000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.65*(2*pi)
sum(log(dtpm(x,0,0)*tune))
tune=0.655*(2*pi)
sum(log(dtpm(x,0,0)*tune))
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
par(mar=c(0,0,0,0), mfrow=c(2,2))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
par(mar=c(0,0,0,0), mfrow=c(2,2))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
par(mar=c(0,0,0,0), mfrow=c(2,2))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
tune=0.652*(2*pi)
sum(log(dtpm(x,0,0)*tune))
exp(sum(log(dtpm(x,0,0)*tune)))
prod(dtpm(x,0,0)*tune)
D =200
im <- matrix(0,D,D)
r <- 1
for (i in 1:D) {
for (j in 1:D) {
im[i,j] <- prod(dtpm(x,r*(i-D/2)/D,j/D)*tune)
}
}
blue <- hcl.colors(100, palette = "blues",rev=T)
image(im,col=blue,xaxt='n', yaxt='n', ann=FALSE, axes=FALSE)
par(mar=c(0,0,0,0), mfrow=c(2,2))
x <- rnorm(5000)
dtpm <- function(x,a,b){
(1-a)*dnorm(x) + a*dnorm(x,b)
}
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sum(log((dtpm(x,0,0)-mean(dtpm(x,0,0))/sd(dtpm(x,0,0)))))
sd(dtpm(x,0,0)
sd(dtpm(x,0,0))
sd(dtpm(x,0,0))
(dtpm(x,0,0)
dtpm(x,0,0)/var(dtpm(x,0,0))
dtpm(x,0,0)/var(dtpm(x,0,0)
dtpm(x,0,0)/var(dtpm(x,0,0)
dtpm(x,0,0)/var(dtpm(x,0,0)
dtpm(x,0,0)/var(dtpm(x,0,0)
dtpm(x,0,0)/var(dtpm(x,0,0))
dtpm(x,0,0)/sd(dtpm(x,0,0))
prod(dtpm(x,0,0)/sd(dtpm(x,0,0)))
prod(dtpm(x,0,0)/sd(dtpm(x,0,0))^2)
dtpm(x,0,0)/sd(dtpm(x,0,0))^2
sd(dtpm(x,0,0))
dtpm(x,0,0)/sd(dtpm(x,0,0)
dtpm(x,0,0)/sd(dtpm(x,0,0))
dtpm(x,0,0)/sd(dtpm(x,0,0))
prod(dtpm(x,0,0)/sd(dtpm(x,0,0)/mean(dtpm(x,0,0))))
sd(dtpm(x,0,0)/mean(dtpm(x,0,0)
sd(dtpm(x,0,0)/mean(dtpm(x,0,0))
dtpm(x,0,0)/sd(dtpm(x,0,0)/mean(dtpm(x,0,0))
dtpm(x,0,0)/sd(dtpm(x,0,0)/mean(dtpm(x,0,0))
dtpm(x,0,0)/sd(dtpm(x,0,0)/mean(dtpm(x,0,0))
prod(dtpm(x,0,0)/sd(dtpm(x,0,0))/mean(dtpm(x,0,0)))
dtpm(x,0,0)/sd(dtpm(x,0,0))/mean(dtpm(x,0,0))
prod(dtpm(x,0,0)/sd(dtpm(x,0,0))/mean(dtpm(x,0,0)))
mean(dtpm(x,0,0))
prod(dtpm(x,0,0)/sd(dtpm(x,0,0)))
install.packages("Rmpfr")
help(Rmpfr)
prod(mpfr(dtpm(x,0,0),100))
library(Rmpfr)
prod(mpfr(dtpm(x,0,0),100))
require(MCMCpack)
require(gtools)
#### Normal Mean Mixture Simulation
rnmm <- function(n,a,b){
K <- length(a)
z <- sample(1:K, n, prob=a, replace=TRUE)
x <- rnorm(n)
for(i in 1:n){
x[i] <- x[i] + b[z[i]]
}
return(x)
}
#### Normal Mean Mixture Density
dnmm <- function(x,a,b){
K <- length(b)
normalDens <- b
for(k in 1:K){
normalDens[k] <- dnorm(x,b[k],1)
}
return(sum(a*normalDens))
}
#### Gibbs Sampler (p.221 Watanabe)
###
gibbsNMM <- function(x,K,nIter,alpha,sigma2){
### variables
N <- length(x)
### Initialisation
y <- matrix(0,N,K)
n <- rep(0,K)
multinDist <- rep(0,K)
bstar <- rep(0,K)
sigma2star <- rep(0,K)
### (1)
a <- matrix(1/K,K,nIter+1)
b <- matrix(0,K,nIter+1)
for(j in 1:nIter){
### (2)
for(i in 1:N){
for(k in 1:K){
multinDist[k] <- a[k,j]*dnorm(x[i],b[k,j])/dnmm(x[i],a[,j],b[,j])
}
y[i,] <- rmultinom(1,1,multinDist)
}
### (3)
n <- apply(y,2,sum)
a[,j+1] <- rdirichlet(1, n+alpha)
### (4)
for(k in 1:K){
bstar[k] <- sum(y[,k]*x)/(1/sigma2+n[k])
sigma2star[k] <- 1/(1/sigma2+n[k])
b[k,j+1] <- rnorm(1,bstar[k], sqrt(sigma2star[k]))
}
}
return(list(a=a,b=b))}
dom <- seq(-8,8,length.out = 1000)
realDens<- sapply(dom, dnmm, a=c(1/7,2/7,4/7), b=c(-3,0,3))
plot(dom,realDens,type='l',lwd=2,lty=2)
plot(dom,realDens,type='l',lwd=2,lty=2, bch='L')
plot(dom,realDens,type='l',lwd=2,lty=2, box='L')
plot(dom,realDens,type='l',lwd=2,lty=2, bty='L')
plot(dom,realDens,type='l',lwd=2,lty=2, bty='L', xlab="", ylab ='q')
### test #############
pdf(file = "q.pdf",width=4, height=4)
plot(dom,realDens,type='l',lwd=2,lty=2, bty='L', xlab="", ylab ='q')
dev.off()
9^2*36178^9/(3000+36178)^9
36178^9/(3000+36178)^9
224/256
19/256
39/256
sample(1:10, replace=F)
beta <- c(0,0,0,2,4,2,0,0,0)
library(spatstat)
library(spatstat)
new.data <- data.frame(x = lansing$x, y = lansing$y, type = lansing$marks)
new.data = new.data[new.data$type!="misc",]
new.data = unique(new.data)
table(new.data$type)
blackoak = new.data[new.data$type=="blackoak",1:2]
write.csv(blackoak,"blackoak.csv", row.names = FALSE, col.names = FALSE)
hickory = new.data[new.data$type=="hickory",1:2]
write.csv(hickory,"hickory.csv", row.names = FALSE, col.names = FALSE)
maple = new.data[new.data$type=="maple",1:2]
write.csv(maple,"maple.csv", row.names = FALSE, col.names = FALSE)
redoak = new.data[new.data$type=="redoak",1:2]
write.csv(redoak,"redoak.csv", row.names = FALSE, col.names = FALSE)
whiteoak = new.data[new.data$type=="whiteoak",1:2]
write.csv(whiteoak,"whiteoak.csv", row.names = FALSE, col.names = FALSE)
write.table(blackoak, sep=",", col.names = FALSE)
library(spatstat)
new.data <- data.frame(x = lansing$x, y = lansing$y, type = lansing$marks)
new.data = new.data[new.data$type!="misc",]
new.data = unique(new.data)
table(new.data$type)
blackoak = new.data[new.data$type=="blackoak",1:2]
write.table(blackoak, "blackoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
hickory = new.data[new.data$type=="hickory",1:2]
write.csv(hickory,"hickory.csv", sep=",", row.names = FALSE, col.names = FALSE)
maple = new.data[new.data$type=="maple",1:2]
write.csv(maple,"maple.csv", sep=",", row.names = FALSE, col.names = FALSE)
redoak = new.data[new.data$type=="redoak",1:2]
write.csv(redoak,"redoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
whiteoak = new.data[new.data$type=="whiteoak",1:2]
write.csv(whiteoak,"whiteoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
library(spatstat)
new.data <- data.frame(x = lansing$x, y = lansing$y, type = lansing$marks)
new.data = new.data[new.data$type!="misc",]
new.data = unique(new.data)
table(new.data$type)
blackoak = new.data[new.data$type=="blackoak",1:2]
write.table(blackoak, "blackoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
hickory = new.data[new.data$type=="hickory",1:2]
write.table(hickory,"hickory.csv", sep=",", row.names = FALSE, col.names = FALSE)
maple = new.data[new.data$type=="maple",1:2]
write.table(maple,"maple.csv", sep=",", row.names = FALSE, col.names = FALSE)
redoak = new.data[new.data$type=="redoak",1:2]
write.table(redoak,"redoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
whiteoak = new.data[new.data$type=="whiteoak",1:2]
write.table(whiteoak,"whiteoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
library(spatstat)
new.data <- data.frame(x = lansing$x, y = lansing$y, type = lansing$marks)
new.data = new.data[new.data$type!="misc",]
new.data = unique(new.data)
table(new.data$type)
blackoak = new.data[new.data$type=="blackoak",1:2]
write.table(blackoak, "blackoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
hickory = new.data[new.data$type=="hickory",1:2]
write.table(hickory,"hickory.csv", sep=",", row.names = FALSE, col.names = FALSE)
maple = new.data[new.data$type=="maple",1:2]
write.table(maple,"maple.csv", sep=",", row.names = FALSE, col.names = FALSE)
redoak = new.data[new.data$type=="redoak",1:2]
write.table(redoak,"redoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
whiteoak = new.data[new.data$type=="whiteoak",1:2]
write.table(whiteoak,"whiteoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
setwd("~/Documents/GitHub/PPPsimulation")
library(spatstat)
new.data <- data.frame(x = lansing$x, y = lansing$y, type = lansing$marks)
new.data = new.data[new.data$type!="misc",]
new.data = unique(new.data)
table(new.data$type)
blackoak = new.data[new.data$type=="blackoak",1:2]
write.table(blackoak, "blackoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
hickory = new.data[new.data$type=="hickory",1:2]
write.table(hickory,"hickory.csv", sep=",", row.names = FALSE, col.names = FALSE)
maple = new.data[new.data$type=="maple",1:2]
write.table(maple,"maple.csv", sep=",", row.names = FALSE, col.names = FALSE)
redoak = new.data[new.data$type=="redoak",1:2]
write.table(redoak,"redoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
whiteoak = new.data[new.data$type=="whiteoak",1:2]
write.table(whiteoak,"whiteoak.csv", sep=",", row.names = FALSE, col.names = FALSE)
